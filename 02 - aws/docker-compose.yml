version: '3.6'

services:
  nginx:
    image: nginx:1.15-alpine
    container_name: nginx
    depends_on:
      - shinyproxy
      - certbot
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    networks:
      - mynet
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - mynet
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  shinyproxy:
    image: aw/shinyproxy
    container_name: shinyproxy
    build: ./application  
    networks:
      - mynet
    volumes:
      - ./application/application.yml:/opt/shinyproxy/application.yml
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8080:8080

  distshiny:
    image: aw/distshiny
    container_name: distshiny
    build: ./apps/distshiny

  bloodbanks:
    image: aw/bloodbanks
    container_name: bloodbanks
    build: ./apps/bloodbanks
  
networks:
  mynet:
    name: mynet